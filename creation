MAIN PROJECT

  CLASS Program.cs
    // Add services to the container.
    var connectionString = builder.Configuration.GetConnectionString("DefaultConnection");
    builder.Services.AddDbContext<ProfiloDBContext>(options =>
    { options.UseSqlServer(connectionString); }
    );

    builder.Services.AddScoped<IProfileService, ProfileService>();

  FOLDER Controllers
    CLASS Profile/Product/Etc
      // Qui dentro si inseriscono i metodi con il CRUD set.
          [Route("api/[controller]")]
    [ApiController]
    public class Profile : ControllerBase
    {

        private readonly IProfileService _profileService;
        public Profile(IProfileService profileService)
        {
            _profileService = profileService;
        }
        // ESEMPIO DI CREATE METHOD
        [HttpPost]
        [Route("SignIn")]
        public IActionResult SignIn(SignInRequestViewModel model)
        {
            try
            {
                var x = _profileService.SignIn(model);
                return Ok(x);
            }
            catch (Exception ex)
            {
                throw new Exception(ex.Message);
            }

        }

    ...

  }

PROJECT Services
  // Qui ho sempre un'interfaccia e la corrispettiva classe
  public interface IProfileService
  {

    GetProfileResponseViewModel GetSingleProfile();

    List<GetProfileResponseViewModel> GetAllProfiles(); 

    RegisterResponseViewModel Register(RegisterRequestViewModel model);

    SignInResponseViewModel SignIn(SignInRequestViewModel model);

    bool AddUser(AddProfileRequestViewModel model);

  }

  // Parte di ProfileService
  public class ProfileService : IProfileService
  {
    private readonly ProfiloDBContext _context;
    public ProfileService(ProfiloDBContext context)
    {
        _context = context;
    }

    public GetProfileResponseViewModel GetSingleProfile()
    {
        GetProfileResponseViewModel response = new GetProfileResponseViewModel();
        response.Id = new Guid();
        response.Name = "Paolo";
        response.Surname = "Rossi";

        return response;
    }

    ...

  }

PROJECT Models
// Qui ho i viewModel
// ESEMPIO

public class AddProfileRequestViewModel
{
    public string Name { get; set; }
    public string Surname { get; set; }
    public string Phone { get; set; }
}

public class AddProfileResponseViewModel
{
    public string InfoMessage { get; set; }
}
  
